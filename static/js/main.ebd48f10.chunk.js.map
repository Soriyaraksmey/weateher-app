{"version":3,"sources":["asset/myedit.mp4","components/weather.utils.js","components/weather.component.jsx","App.js","index.js"],"names":["module","exports","Generatedata","weather","currently","temperature","summary","windSpeed","timezone","icon","hourly","C","Math","floor","objToday","Date","weekday","Array","Months","day","getDay","month","getMonth","year","getFullYear","date","Weathercontent","state","data","fetchdata","long","lat","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","api","fetch","then","response","json","Data","setState","alert","this","className","Component","App","src","video","autoPlay","loop","muted","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,oC,+KCyB5BC,EAxBM,SAACC,GAAY,IAAD,EACuBA,EAAQC,UAA3CC,EADY,EACZA,YAAaC,EADD,EACCA,QAAQC,EADT,EACSA,UACtBC,EAAaL,EAAbK,SACAC,EAAQN,EAAQO,OAAhBD,KACHE,EAAIC,KAAKC,MAA4B,EAAI,GAAzBR,EAAc,KACrCS,EAAW,IAAIC,KACfC,EAAU,IAAIC,MAAM,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACtFC,EAAS,IAAID,MAAM,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACjIE,EAAML,EAASM,SACfC,EAAQP,EAASQ,WACjBC,EAAOT,EAASU,cAYtB,MATY,CACRnB,YAAaM,EACbL,QAASA,EACTC,UAAWA,EACXC,SAAUA,EACViB,KAPM,UAAMT,EAAQG,GAAd,YAAsBA,EAAtB,YAA6BD,EAAOG,GAApC,YAA8CE,GAQpDpB,QAASM,IC8CFiB,G,kNA5DXC,MAAQ,CACNC,KAAM,I,EAORC,UAAW,WACT,IAAIC,EACAC,EACAH,EACAI,UAAUC,YACZD,UAAUC,YAAYC,oBAAmB,SAAAC,GACrCL,EAAOK,EAASC,OAAOC,UACvBN,EAAMI,EAASC,OAAOE,SAEtB,IACMC,EAAG,UADK,uCACL,6EAAgFR,EAAhF,YAAuFD,GAEhGU,MAAMD,GACDE,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACNhB,EAAO1B,EAAa0C,GACpB,EAAKC,SAAS,CAACjB,eAMjBkB,MAAM,uC,kEA3BdC,KAAKlB,c,+BA+BG,IAAD,EAEuDkB,KAAKpB,MAAMC,KAAlEH,EAFA,EAEAA,KAAKnB,EAFL,EAEKA,QAAQD,EAFb,EAEaA,YAAYG,EAFzB,EAEyBA,SAASD,EAFlC,EAEkCA,UAAUJ,EAF5C,EAE4CA,QACjD,OACI,yBAAK6C,UAAU,WACf,yBAAKA,UAAU,QACf,6BAASA,UAAU,YACvB,yBAAKA,UAAU,QAAQxC,GACf,yBAAKwC,UAAU,QAAQvB,IAEzB,yBAAKuB,UAAU,WACb,yBAAKA,UAAU,QAAQ3C,EAAY,wCACnC,yBAAK2C,UAAU,gBACb,uBAAGA,UAAU,WAAW7C,GACxB,uBAAG6C,UAAU,cAAb,UAA8BzC,EAA9B,UAEF,yBAAKyC,UAAU,oBAAoB1C,U,GArDrB2C,c,wBCefC,MAZf,WACE,OACE,yBAAKF,UAAU,gBACf,yBAAKA,UAAU,YACb,2BAAOG,IAAKC,IAAOC,UAAU,EAAMC,MAAM,EAAOC,OAAO,KAEzD,kBAAC,EAAD,QCTJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ebd48f10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/myedit.74e44b8d.mp4\";","\r\nconst Generatedata = (weather) =>{\r\n             const { temperature, summary,windSpeed } = weather.currently;\r\n             const {timezone } = weather;\r\n             const {icon} = weather.hourly;\r\n             let C = Math.floor((temperature - 32) * (5 / 9));\r\n    const objToday = new Date();\r\n    const weekday = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday');\r\n    const Months = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');\r\n    const day = objToday.getDay();\r\n    const month = objToday.getMonth();\r\n    const year = objToday.getFullYear();\r\n    const date = `${weekday[day]} ${day} ${Months[month]} ${year}`;\r\n         \r\n   const data = {\r\n        temperature: C,\r\n        summary: summary,\r\n        windSpeed: windSpeed,\r\n        timezone: timezone,\r\n        date: date,\r\n        weather: icon,\r\n    }\r\n\r\n    return data;\r\n}\r\nexport default Generatedata;","import React,{Component} from \"react\";\r\nimport Generatedata from \"./weather.utils\";\r\n\r\nimport \"./weather.style.css\";\r\n\r\nclass Weathercontent  extends Component {\r\n    state = { \r\n      data: ''\r\n    }\r\n    \r\n    componentDidMount(){\r\n      this.fetchdata();\r\n    }\r\n\r\n    fetchdata= () => {\r\n      let long;\r\n      let lat;\r\n      let data;\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            long = position.coords.longitude;\r\n            lat = position.coords.latitude;\r\n\r\n            const proxy = \"https://cors-anywhere.herokuapp.com/\";\r\n            const api = `${proxy}https://api.darksky.net/forecast/68af9a32b3246670b7dd91a428846c1a/${lat},${long}`;\r\n\r\n            fetch(api)\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(Data => {\r\n                data = Generatedata(Data);\r\n                this.setState({data});\r\n             \r\n                  })\r\n                });\r\n            }\r\n            else{\r\n              alert(\"Please reload page and click allow\");\r\n            }   \r\n    }\r\n\r\n    render() { \r\n\r\n      const {date,summary,temperature,timezone,windSpeed,weather} = this.state.data;\r\n        return ( \r\n            <div className=\"content\">\r\n            <div className=\"card\">\r\n            <section className=\"location\">\r\n        <div className=\"city\">{timezone}</div>\r\n                <div className=\"date\">{date}</div>\r\n              </section>\r\n              <div className=\"current\">\r\n                <div className=\"temp\">{temperature}<span>Â°c</span></div>\r\n                <div className=\"weather-wind\">\r\n                  <p className='weather'>{weather}</p>\r\n                  <p className=\"wind-speed\">{`${windSpeed}km/h`}</p>\r\n                </div>\r\n                <div className=\"possible-weather\">{summary}</div>\r\n              </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Weathercontent;","import React from 'react';\n\nimport Weathercontent  from \"./components/weather.component\";\n\nimport './App.css';\nimport video from \"./asset/myedit.mp4\";\n\n\nfunction App() {\n  return (\n    <div className=\"hero-section\">\n    <div className=\"bg-video\"> \n      <video src={video} autoPlay={true} loop={true}  muted={true} ></video>\n    </div>\n    <Weathercontent/>\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}